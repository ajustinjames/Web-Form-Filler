diff --git a/background.html b/background.html
deleted file mode 100644
index 39a4c39..0000000
--- a/background.html
+++ /dev/null
@@ -1,14 +0,0 @@
-<!DOCTYPE html>
-<html>
-<head>
-
-    <title></title>
-    <script type="text/javascript" src="javascripts/parseuri.js"></script>
-    <script type="text/javascript" src="javascripts/utils.js"></script>
-    <script type="text/javascript" src="javascripts/background.js"></script>
-
-</head>
-    <body>
-
-    </body>
-</html>
diff --git a/javascripts/background.js b/javascripts/background.js
index d2c10f8..055df0b 100644
--- a/javascripts/background.js
+++ b/javascripts/background.js
@@ -1,35 +1,38 @@
-function getHotkeys(url) {
-    var sets = getSetsForCurrentUrl(url);
-    var hotkeys = [];
+importScripts('parseuri.js', 'utils.js');
 
-    for (var i = 0; i < sets.length; i++) {
-        if (!sets[i].hotkey) {
-            continue;
-        }
+function getHotkeys(url, callback) {
+    getSetsForCurrentUrl(url, function (sets) {
+        var hotkeys = [];
 
-        hotkeys.push(sets[i].hotkey);
-    }
+        for (var i = 0; i < sets.length; i++) {
+            if (!sets[i].hotkey) {
+                continue;
+            }
+
+            hotkeys.push(sets[i].hotkey);
+        }
 
-    return hotkeys;
+        callback(hotkeys);
+    });
 }
 
 chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {
-    var hotkeys = getHotkeys(request.url);
-
-    switch (request.action) {
-        case 'gethotkeys':
+    if (request.action === 'gethotkeys') {
+        getHotkeys(request.url, function (hotkeys) {
             sendResponse(hotkeys);
-            break;
-
-        case 'hotkey':
-            var sets = getSetsForCurrentUrl(request.url);
+        });
+        return true;
+    }
+    else if (request.action === 'hotkey') {
+        getSetsForCurrentUrl(request.url, function (sets) {
             for (var i = 0; i < sets.length; i++) {
                 if (sets[i].hotkey == request.code) {
                     sendResponse(sets[i]);
+                    return;
                 }
             }
-            break;
+            sendResponse(null);
+        });
+        return true;
     }
-
-    return true;
 });
\ No newline at end of file
diff --git a/javascripts/content_script.js b/javascripts/content_script.js
index 6df73cd..26c40fa 100644
--- a/javascripts/content_script.js
+++ b/javascripts/content_script.js
@@ -51,12 +51,7 @@ $.fn.serializeForm = function() {
     return formparams;
 };
 
-chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
-    if (typeof (localStorage) == 'undefined') {
-        alert('WebFormFiller: Your browser does not support HTML5 local storage feature. This extension will not work without this feature.');
-        return;
-    }
-    
+chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {    
     switch (request.action) {
         case 'store':
             try {
diff --git a/javascripts/popup.js b/javascripts/popup.js
index a266fb9..39ba9a1 100644
--- a/javascripts/popup.js
+++ b/javascripts/popup.js
@@ -1,20 +1,21 @@
 var tab_url;
 
-function getAllSets() {
-    var sets = [];
+function getAllSets(callback) {
+    chrome.storage.local.get(null, function(items){
+        var sets = [];
 
-    for (var i = 0; i < localStorage.length; i++) {
-        var key = localStorage.key(i);
-        if (key == 'filter') {
-            continue;
+        for (var key in items) {
+            if (key == 'filter') {
+                continue;
+            }
+            
+            var settings = items[key];
+            settings.key = key;
+            sets.push(settings);
         }
-        
-        var settings = JSON.parse(localStorage.getItem(key));
-        settings.key = key;
-        sets.push(settings);
-    }
 
-    return sets;
+        callback(sets);
+    });
 }
 
 function sortBy(property) {
@@ -31,18 +32,23 @@ function sortBy(property) {
 
 function refreshSetsList(url) {
     var table = $('#sets');
-    var sets;
     
     table.find('tbody tr').remove();
     
     if (table.hasClass('allsets')) {
-        sets = getAllSets();
-        sets.sort(sortBy('url'));
+        getAllSets(function(sets){
+            sets.sort(sortBy('url'));
+            displaySets(sets, table);
+        });
     } else {
-        sets = getSetsForCurrentUrl(url);
-        sets.sort(sortBy('name'));
+        getSetsForCurrentUrl(url, function(sets) {
+            sets.sort(sortBy('name'));
+            displaySets(sets, table);
+        });
     }
+}
 
+function displaySets(sets, table) {
     if (sets.length) {
         $('#sets').show();
         $('#nosets').hide();
@@ -50,7 +56,6 @@ function refreshSetsList(url) {
     } else {
         $('#sets').hide();
         $('#nosets').show();
-        //$('#nosets_url').text(url);
         $('#clearall').addClass('disabled');
         return;
     }
@@ -104,15 +109,19 @@ function renderAdditionalInfo(sets) {
 
 function saveValue(tr, property, value) {
     var key = tr.data('key');
-    var setSettings = JSON.parse(localStorage.getItem(key));
-    setSettings[property] = value;
-    localStorage.setItem(key, JSON.stringify(setSettings));
+    chrome.storage.local.get(key, function(result) {
+        result[property] = value;
+        chrome.storage.local.set({[key]: result});
+    });
 }
 
 function getValue(tr, property) {
     var key = tr.data('key');
-    var setSettings = JSON.parse(localStorage.getItem(key));
-    return setSettings[property];
+    var result;
+    chrome.storage.local.get(key, function(result) {
+        result = result[property];
+    });
+    return result;
 }
 
 function sendMessage(obj, callback) {
@@ -122,22 +131,25 @@ function sendMessage(obj, callback) {
 }
 
 function setCurrentFilter() {
-    var value = localStorage.getItem('filter');
-    
-    if (!value) {
-        localStorage.setItem('filter', FILTER_BY_FULL);
-        value = FILTER_BY_FULL;
-    }
+    chrome.storage.local.get('filter', function(result) {
+        var value = result.filter;
 
-    var link = $('a.filter[id=' + value + ']');
-    link.prepend('<i class="icon-ok"></i> ');
+        if (!value) {
+            value = FILTER_BY_DOMAIN;
+            chrome.storage.local.set({'filter': value });
+        }
+        $('#filter').val(value);
+    });
 }
 
 function getRandomStorageId() {
-    var key = Math.floor((Math.random() * 1000000000) + 1);
-    if (localStorage.getItem(key)) {
-        return Math.floor((Math.random() * 1000000000) + 1);
-    }
+    var key = 'set_' + new Date().getTime();
+    chrome.storage.local.get(key, function(result) {
+        if (result[key]) {
+            return getRandomStorageId();
+        }
+    });
+
     return key;
 }
 
@@ -149,9 +161,9 @@ chrome.tabs.query({ 'active': true, 'currentWindow': true }, function (tab) {
 $(document).ready(function () {
     setCurrentFilter();
     
-	$('.donatelink').click(function () {
-		$('#donate').toggle();
-	});
+	// $('.donatelink').click(function () {
+	// 	$('#donate').toggle();
+	// });
 	
     $("#check").click(function () {
         
@@ -163,55 +175,38 @@ $(document).ready(function () {
     });
 
     $("#import").click(function () {
-		var importBlock = $('#importBlock');
+		$('#txtImportFormJson').val('');
+        $('#importBlock').show();
+    });
 
-        if (importBlock.is(':visible')) {
-            importBlock.hide();
+    $("#btnImportSave").click(function () {
+        var importedForm;
+        try {
+            importedForm = JSON.parse($('#txtImportFormJson').val());
+        } catch (e) {
+            showError('Invalid JSON');
             return;
         }
+        var key = getRandomStorageId();
 
-        importBlock.show();
-		importBlock.find('#txtImportFormJson').focus();
-    });
-	
-    $("#btnImportSave").click(function () {
-		var json = $('#txtImportFormJson').val();
-
-		try {
-			var importedForm = JSON.parse(json);
-
-			if (!importedForm.url || !importedForm.content || !importedForm.name) {
-				throw new Error("Invalid JSON format");
-			}
-			
-			if (importedForm.url === '*'){
-				importedForm.name += '-global';
-			}
-			
-			var key = getRandomStorageId();
-			localStorage.setItem(key, JSON.stringify(importedForm));
-
-		}
-		catch (err) {
-			alert('Got an error: ' + err.message);
-		}
-		
-		refreshSetsList(tab_url);
-		$('#importBlock').hide();
+        chrome.storage.local.set({[key]: importedForm}, function() {
+            $('#importBlock').modal('hide');
+            refreshSetsList(tab_url);
+        });
     });
 
     $("#clearall").click(function () {
-        if ($(this).hasClass("disabled")) {
+        if ($(this).hasClass('disabled')) {
             return;
         }
 
-        var sets = getSetsForCurrentUrl(tab_url);
-        
-        for (var i = 0; i < sets.length; i++) {
-            localStorage.removeItem(sets[i].key);
-        }
+        getSetsForCurrentUrl(tab_url, function(sets) {
+            for (var i = 0; i < sets.length; i++) {
+                chrome.storage.local.remove(sets[i].key);
+            }
 
-        refreshSetsList(tab_url);
+            refreshSetsList(tab_url);
+        });
     });
 
     $("#store").click(function () {
@@ -244,8 +239,9 @@ $(document).ready(function () {
                 hotkey: ''
             };
 
-            localStorage.setItem(key, JSON.stringify(setSettings));
-            refreshSetsList(tab_url);
+            chrome.storage.local.set({[key]: setSettings}, function(){
+                refreshSetsList(tab_url);
+            });
         });
     });
 
@@ -257,10 +253,12 @@ $(document).ready(function () {
 
     sets.on("click", 'td.restore:not(.disabled)', function (event) {
         var key = $(this).parents('tr').data('key');
-        var setSettings = JSON.parse(localStorage.getItem(key));
 
-        sendMessage({ action: 'fill', setSettings: setSettings }, function(response) {
-             window.close();
+        chrome.storage.local.get(key, function(items) {
+            var setSettings = items[key];
+            sendMessage({ action: 'fill', setSettings: setSettings }, function(response) {
+                window.close();
+            });
         });
     });
     
@@ -295,11 +293,12 @@ $(document).ready(function () {
     });
 
     sets.on("click", 'td.remove', function (event) {
-        var tr = $(this).parents('tr');
-        var key = tr.data('key');
+        var key = $(this).parents('tr').data('key');
+        chrome.storage.local.remove(key, function() {
+            refreshSetsList(tab_url);
+        });
         
-        localStorage.removeItem(key);
-		refreshSetsList(tab_url);
+        event.stopPropagation();
     });
 
     sets.on("click", 'td.export', function (event) {
@@ -313,12 +312,15 @@ $(document).ready(function () {
         var td = $(this);
         var tr = td.parents('tr');
         var key = tr.data('key');
-        var formJson = localStorage.getItem(key);
 
-        td.addClass('active');
-        exportBlock.show();
+        chrome.storage.local.get(key, function(items) {
+            var formJson = JSON.stringify(items[key]);
+
+            td.addClass('active');
+            exportBlock.show();
 
-        exportBlock.find('#txtFormJson').val(formJson).focus().select();
+            exportBlock.find('#txtFormJson').val(formJson).focus().select();
+        });
     });
     
     sets.on("click", 'td.hotkey', function (event) {
@@ -398,16 +400,29 @@ $(document).ready(function () {
     $('#btnImportClose').click(function () {
         $('#importBlock').hide();
     });
+
+    sets.on("click", 'td.view', function (event) {
+        var key = $(this).parents('tr').data('key');
+        viewSet(key); 
+        event.stopPropagation();
+    });
     
     $('a.filter').click(function () {
         var link = $(this);
         var value = link.attr('id');
-        $('a.filter').not(link).find('i').remove();
 
-        localStorage.setItem('filter', value);
-        link.prepend('<i class="icon-ok"></i> ');
+        chrome.storage.local.get('filter', function(result) {
+            var currentFilter = result.filter;
+            if (currentFilter !== value) {
+                $('a.filter').not(link).find('i').remove();
 
-        refreshSetsList(tab_url);
+            chrome.storage.local.set({'filter': value }, function(){
+                link.prepend('<i class="icon-ok"></i> ');
+                refreshSetsList(tab_url);
+            });
+            }
+        });
+        event.stopPropagation();
     });
 
     sets
@@ -416,5 +431,82 @@ $(document).ready(function () {
     }).on("mouseup", 'tbody td', function(event) {
         $(this).removeClass('clicked');
     });
+});
+
+function saveSet(name, content, url, autoSubmit, submitQuery, hotkey) {
+    var key = 'set_' + new Date().getTime();
 
-});
\ No newline at end of file
+    var setSettings = {
+        name: name,
+        content: content,
+        url: url,
+        autoSubmit: autoSubmit,
+        submitQuery: submitQuery,
+        hotkey: hotkey
+    };
+
+    chrome.storage.local.set({[key]: setSettings}, function(){
+        refreshSetsList(tab_url);
+    });
+}
+
+function importSet() {
+    var importedForm;
+    try {
+        importedForm = JSON.parse($('#txtImportFormJson').val());
+    } catch (e) {
+        showError('Invalid JSON');
+        return;
+    }
+    
+    var key = 'set_' + new Date().getTime();
+
+    chrome.storage.local.set({[key]: importedForm}, function() {
+        $('#importBlock').hide();
+        refreshSetsList(tab_url);
+    });
+}
+
+function clearAllSets() {
+    getSetsForCurrentUrl(tab_url, function(sets) {
+        for (var i = 0; i < sets.length; i++) {
+            chrome.storage.local.remove(sets[i].key);
+        }
+
+        refreshSetsList(tab_url);
+    });
+}
+
+function saveSetSettings(tr) {
+    var key = tr.data('key');
+    var name = tr.find('.txtSetName').val();
+    var autoSubmit = tr.find('.chAutoSubmit').is(':checked');
+    var submitQuery = tr.find('.txtSubmitQuery').val();
+    var hotkey = tr.find('.txtHotkey').val();
+
+    chrome.storage.local.get(key, function(items) {
+        var setSettings = items[key];
+        setSettings.name = name;
+        setSettings.autoSubmit = autoSubmit;
+        setSettings.submitQuery = submitQuery;
+        setSettings.hotkey = hotkey;
+
+        chrome.storage.local.set({[key]: setSettings}, function() {
+            refreshSetsList(tab_url);
+        });
+    });
+}
+
+function removeSet(key) {
+    chrome.storage.local.remove(key, function() {
+        refreshSetsList(tab_url);
+    });
+}
+
+function viewSet(key) {
+    chrome.storage.local.get(key, function(items) {
+        var formJson = items[key];
+        $('#txtFormJson').val(JSON.stringify(formJson, null, 4));
+        $('#exportBlock').modal('show');
+    });
+}
\ No newline at end of file
diff --git a/javascripts/utils.js b/javascripts/utils.js
index c870b39..ed99583 100644
--- a/javascripts/utils.js
+++ b/javascripts/utils.js
@@ -2,9 +2,7 @@ var FILTER_BY_DOMAIN = 'domain';
 var FILTER_BY_PATH = 'path';
 var FILTER_BY_FULL = 'full';
 
-function fits(current, storage) {
-    var value = localStorage.getItem('filter');
-    
+function fits(current, storage, filterValue) {
     current = current.toLowerCase();
     storage = storage.toLowerCase();
 
@@ -14,37 +12,41 @@ function fits(current, storage) {
     if (storage === '*') {
         return true;
 		
-    } else if (value === FILTER_BY_DOMAIN) {
+    } else if (filterValue === FILTER_BY_DOMAIN) {
         return url1.host === url2.host;
 
-    } else if (value === FILTER_BY_PATH) {
+    } else if (filterValue === FILTER_BY_PATH) {
         return (url1.protocol + url1.host + url1.path) == (url2.protocol + url2.host + url2.path);
         
-    } else if (value === FILTER_BY_FULL) {
+    } else if (filterValue === FILTER_BY_FULL) {
         return current == storage;
         
     } else {
-        console.error('WebFormFiller: filter value is wrong: ' + value);
+        console.error('WebFormFiller: filter value is wrong: ' + filterValue);
         return true;
     }
 }
 
-function getSetsForCurrentUrl(url) {
-    var sets = [];
-    
-    for (var i = 0; i < localStorage.length; i++) {
-        var key = localStorage.key(i);
-        if (key == 'filter') {
-            continue;
-        }
+function getSetsForCurrentUrl(url, callback) {
+    chrome.storage.local.get(null, function(items){
+        var sets = [];
+        var filterValue = items.filter || FILTER_BY_DOMAIN;
+        
+        for (var key in items) {
+            if (key === 'filter') continue;
 
-        var settings = JSON.parse(localStorage.getItem(key));
+            var settings = items[key];
 
-        if (fits(url, settings.url)) {
-            settings.key = key;
-            sets.push(settings);
+            if (!settings || !settings.url) {
+                continue;
+            }
+
+            if (fits(url, settings.url, filterValue)) {
+                settings.key = key;
+                sets.push(settings);
+            }
         }
-    }
 
-    return sets;
+        callback(sets);
+    });
 }
diff --git a/manifest.json b/manifest.json
index eb34118..630ddd2 100644
--- a/manifest.json
+++ b/manifest.json
@@ -1,4 +1,4 @@
-{
+ {
 	"content_scripts" : [ {
 				"js" : [
 					"javascripts/jquery-1.9.1.min.js", 
@@ -15,17 +15,21 @@
 		    "48" :  "images/48.png",
 		    "128" : "images/128.png"},
 	"description": "This extension is used by developers to make it easy to fill forms",
-	"browser_action": {
+	"action": {
 		"default_icon": "images/48.png",
 		"default_title": "Web Developer Form Filler",
 		"default_popup": "popup.html"
 	},
 	"background": {
-		"page": "background.html"
+		"service_worker": "javascripts/background.js"
 	},
 	"permissions": [
 		"tabs",
-		"http://*/", "https://*/"
+		"storage"
 	],
-	"manifest_version":2
+	"host_permissions": [
+		"http://*/", 
+		"https://*/"
+	],
+	"manifest_version": 3
 }
diff --git a/popup.html b/popup.html
index be50369..dbe4c64 100644
--- a/popup.html
+++ b/popup.html
@@ -52,9 +52,8 @@
                 <li><a href="#" class="filter" id="path">Filter by path</a></li>
                 <li><a href="#" class="filter" id="full">Filter by full URL</a></li>
                 <li class="divider"></li>
-                <li><a href="https://chrome.google.com/webstore/support/gbagmkohmhcjgbepncmehejaljoclpil?hl=ru&gl=ID#bug" target="_blank">Report a problem</a></li>
-                <li><a href="http://github.com/abzubarev/web-developer-form-filler-ext" target="_blank">Sources on GitHub</a></li>
-				<li><a href="#" class="donatelink">Donate</a></li>
+                <li><a href="https://github.com/ajustinjames/Web-Form-Filler/issues/" target="_blank">Report a problem</a></li>
+                <li><a href="https://github.com/ajustinjames/Web-Form-Filler" target="_blank">Sources on GitHub</a></li>
 			</ul>
         </div>
 
@@ -77,21 +76,6 @@
             </tbody>
         </table>
 
-        <div class="text-center donatelink" style="color:#c91d1d;">
-            <span>if you like the extension you can <a style="cursor: pointer">buy me a beer</a></span>
-        </div>
-
-        <div class="text-center" id="donate" style="display: none;color:#c91d1d;">
-            <br />
-            <form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_blank">
-            <input type="hidden" name="cmd" value="_s-xclick">
-            <input type="hidden" name="encrypted" value="-----BEGIN PKCS7-----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-----END PKCS7-----
-            ">
-            <input type="image" src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" border="0" name="submit" alt="PayPal - The safer, easier way to pay online!">
-            <img alt="" id="donatebtn" border="0" src="https://www.paypalobjects.com/en_US/i/scr/pixel.gif" width="1" height="1">
-            </form>
-        </div>
-
         <div id="hotkeyBlock" class="block" style="display: none">
             <h4 id="hHotkey">Type your hotkey</h4>
             <div class="form-inline text-left ">
@@ -125,8 +109,5 @@
                 <button class="btn" id="btnImportClose">Close</button>
             </div>
         </div>
-		
-		
-		
     </body>
 </html>
